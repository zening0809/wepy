<template>
    <view class="container">
        <CommentSupport :cardId.sync="card_id" />
        <SendComment :cardId.sync="card_id" wx:if="{{commentStatus}}" />
        <view class="teamContent">
            <ProductCard />
            <view class="comment">
                <view class="header" wx:if="{{!isHasComment}}">暂无评论</view>
                <view class="header" wx:if="{{isHasComment}}">全部评论</view>
                <repeat for="{{commentList}}" key="index" index="index" item="item">
                    <view class="item">
                        <view class="item-header">
                            <view class="item-header--left">
                                <image src="{{ item.avatar_url}}" class="item-avatar" />
                                <text class="item-name">{{item.nickname}}</text>
                                <view class="item-number">No.{{item.group}}</view>
                            </view>
                            <view @tap="support" class="item-header--right" data-index="{{index}}">
                                <image src="/asserts/image/home/suport_card.png" class="item-like" />{{item.support.length}}
                            </view>
                        </view>
                        <view class="item-content">
                            {{item.content}}
                        </view>
                        <view class="item-footer">
                            <view class="item-time">{{item.create_time}}</view>
                            <view @tap.stop="deleteComment" data-index="{{index}}" class="item-del" wx:if="{{item.isOwn}}">删除</view>
                        </view>
                    </view>
                </repeat>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import {
        POST,
        GET
    } from '../../utils'
    import ProductCard from '../../components/productCard'
    import CommentSupport from '../../components/commentSupport'
    import SendComment from '../../components/comment'
    export default class TeamComment extends wepy.page {
        data = {
            isHasComment: false,
            commentStatus: false,
            // teamInfo: {
            //     avatar_url: '/asserts/image/home/title.png',
            //     nickname: '乐小舟',
            //     group: '262',
            //     img_url: '/asserts/image/home/content.png',
            //     title: '实质检测水质的新发现 !',
            //     content: '我们选择了四个典型采集点进行水的取样并进行检测、统计排污口、沿河道观察是否有直排现象并拍照记录。',
            //     tag: '团队进展',
            //     support: '666',
            //     isshow: false
            // },
            commentList: [],
            // commentList: [
            //     {avatar_url: 'title.png', nickname: '失去的春天', id: '123', support: [1], content: '本案中哇哦撒可富来接我困了士大夫撒飞洒地方萨芬，索拉卡佛我为富兰克林开发了快速士大夫士大夫撒。', create_time: '刚刚'},
            //     {avatar_url: 'title.png', nickname: '就在那天', id: '232', support: [1], content: '就卡死覅四分五裂萨菲立刻来了', create_time: '五分钟前'},
            //     {avatar_url: 'title.png', nickname: '过往不及', id: '6', support: [1], content: '撒服务二期温热武器为你戊二醛无热无若', create_time: '半小时前'}
            // ],
            tagList: [{
                    color: '#256af2',
                    text: '技能交换'
                },
                {
                    color: '#b4e99f',
                    text: '团队进展'
                },
                {
                    color: '#fb91af',
                    text: '求助'
                },
                {
                    color: '#f7cd8b',
                    text: '资源分享'
                }
            ],
            card_id: 0,
            open_id: ''
        }
        config = {
            navigationBarTitleText: '团队评论'
        }
        components = {
            ProductCard,
            CommentSupport,
            SendComment
        }
        methods = {
            deleteComment(e) {
                let index = e.currentTarget.dataset.index;
                let id = this.commentList[index].id;
                let session_key = wx.getStorageSync('session_key');
                // e.stopPropagation(); 
                wepy.showModal({
                    title: '确定删除？',
                    confirmColor: '#6CACF4',
                    showCancel: true,
                    success: (res) => {
                        if (res.confirm) {
                            let localUrl = this.$parent.globalData.backgroundCheckUrl;
                            POST(`${localUrl}/comment/delete`, {
                                id,
                                session_key
                            }, (res) => {
                                if (res.data.status === 1) {
                                    // 刷新页面
                                    this.getCommentList(this.card_id, session_key);
                                }
                            })
                        } else if (res.cancel) {
                            console.log('用户点击了取消')
                        }
                    }
                })
            },
            support(e) {
                let index = e.currentTarget.dataset.index;
                let session_key = wx.getStorageSync('session_key');
                let data = {
                    session_key: session_key,
                    id: this.data.commentList[index].id
                }
                let localUrl = this.$root.$parent.globalData.backgroundCheckUrl;
                POST(`${localUrl}/comment/support`, data, (res) => {
                    // 添加成功
                    if (res.data.data.status == 1) {
                        this.getCommentList(this.card_id, session_key);
                    }
                })
            }
        }
        events = {
            openPopup: () => {
                this.commentStatus = true;
            },
            closePopup: (type) => {
                let session_key = wx.getStorageSync('session_key');
                this.commentStatus = false
                if (type == 1) {
                    this.getCommentList(this.card_id, session_key);
                }
                this.$apply();
            },
            addSupport: () => {
                this.supportNum += 1;
                this.$apply();
            }
        }
        // 获取评论列表
        getCommentList(id, session_key) {
            let that = this;
            let localUrl = this.$parent.globalData.backgroundCheckUrl;
            GET(`${localUrl}/comment/getList`, {
                card_id: id,
                session_key: session_key
            }, (res) => {
                if (res.data.status === 1) {
                    let commentList = res.data.data;
                    if (commentList.length > 0) {
                        this.isHasComment = true;
                    }
                    commentList.map(v => v.isOwn = false)
                    commentList.map(v => {
                        if (v.openid == that.open_id) {
                            v.isOwn = true;
                        }
                    })
                    this.commentList = res.data.data;
                    this.$apply();
                }
            })
        }
        // 获取卡片信息
        getCardMsg(id, session_key) {
            let localUrl = this.$parent.globalData.backgroundCheckUrl;
            GET(`${localUrl}/card/curent`, {
                id: id,
                session_key: session_key
            }, (res) => {
                if (res.data.status === 1) {
                    this.assignmentAction(res.data.data);
                    this.$apply();
                }
            })
        }
        // 获取用户信息
        getUserInfo(session_key) {
            let that = this;
            let localUrl = that.$parent.globalData.backgroundCheckUrl;
            GET(`${localUrl}/user/user`, {
                session_key: session_key
            }, (res) => {
                if (res.data.status === 1) {
                    let curUser = res.data.data;
                    that.open_id = curUser.openid;
                    that.$apply();
                }
            })
        }
        assignmentAction(item) {
            this.$broadcast('switchCard', item);
        }
        onLoad(options) {
            let session_key = wx.getStorageSync('session_key');
            this.getUserInfo(session_key);
            this.card_id = options.id;
            this.getCardMsg(options.id, session_key);
            this.getCommentList(options.id, session_key);
        }
    }
</script>

<style lang="scss" scoped>
    .container {
        height: 100%;
        font-size: 24rpx;
        background-color: #f0f0f0;
    }
    .teamContent {
        padding-bottom: 110rpx;
        overflow-y: scroll;
        background-color: #f0f0f0;
    }
    .comment {
        padding: 50rpx 0 0;
        background-color: #fff;
        margin-top: 80rpx;
    }
    .header {
        padding: 20rpx 40rpx;
        border-bottom: 2rpx solid #ddd;
        font-size: 30rpx;
    }
    .item {
        padding: 20rpx 40rpx;
        border-bottom: 1rpx solid #ddd;
        &-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            &--left {
                display: flex;
                align-items: center;
            }
            &--right {
                display: flex;
                align-items: center;
                padding: 5rpx 25rpx;
                color: rgb(60, 99, 228);
                background-color: #f0f0f0;
                border: 1rpx solid #ddd;
                border-radius: 10rpx;
            }
        }
        &-avatar {
            height: 100rpx;
            width: 100rpx;
        }
        &-name {
            margin: 0 20rpx;
        }
        &-number {
            padding: 0 20rpx;
            font-size: 20rpx;
            color: #fff;
            background-color: rgb(60, 99, 228);
            border-radius: 20rpx;
        }
        &-like {
            height: 30rpx;
            width: 30rpx;
            margin-right: 20rpx;
        }
        &-content {
            padding: 20rpx 0;
            color: #999;
        }
        &-footer {
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 20rpx;
        }
        &-time {
            color: #999;
        }
        &-del {
            color: rgb(60, 99, 228);
        }
    }
</style>
