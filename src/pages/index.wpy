<template>
    <view class="homeContainer" @touchstart="handleTouchstart" @touchend="handleTouchend">
        <ChooseCard/>
        <view class="headContainer">
            <image class="logo" src="/asserts/image/home/logo.png" />
            <view class="cardContainer">
                <view class="logoCardContainer"  @tap="chooseCardAction">
                    <view>
                        <image src="/asserts/image/home/nav.png" />
                    </view>
                    <text>筛选</text>
                </view>
                <view class="logoCardContainer" @tap="sendCard">
                    <view>
                        <image src="/asserts/image/home/plus.png" />
                    </view>
                    <text>写卡片</text>
                </view>
                <view class="logoCardContainer" @tap="toCardList">
                    <view class='notice' wx:if="{{noticeStatus}}"></view>
                    <view style="background:#fff;box-shadow: 0 2px 8px rgba(0, 0, 0, .45)">
                        <image src="/asserts/image/home/box.png" />
                    </view>
                    <text>卡片盒</text>
                </view>
            </view>
        </view>
        <ProductCard wx:if="{{isShow}}" />
        <BtnCom/>
    </view>

</template>

<script>
    import wepy from "wepy";
    import BtnCom from "../components/btnCom";
    import ProductCard from "../components/productCard";
    import ChooseCard from "../components/chooseCard";
    import {
        GET
    } from "../utils";
    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: "SDGo社区"
        };
        components = {
            BtnCom,
            ProductCard,
            ChooseCard
        };
        data = {
            isShow: false,
            // 鼠标滑动数据
            mouseData: {
                lastX: 0,
                lastY: 0
                // text: '没有滑动',
                // currentGesture: 0
            },
            animation: {},
            animationData: {},
            curCard: [],
            curIndex: 0,
            page: 1,
            sendCardPower: 1,
            noticeStatus: false
        };
        computed = {};
        methods = {
            // 路由跳转
            navigate(pageName, power) {
                if (pageName === 'card_page' || power === 1) {
                    wepy.navigateTo({
                        url: `/pages/${pageName}/index`
                    });
                } else {
                    wx.showModal({
                        title: '提示',
                        content: '发卡数量超出限制',
                        showCancel: false
                    })
                }
            },
            // 写卡片
            sendCard() {
                let localUrl = this.$parent.globalData.backgroundCheckUrl;
                let session_key = wx.getStorageSync('session_key');
                GET(`${localUrl}/user/user`, {
                    session_key: session_key
                }, res => {
                    if (res.data.status === 1) {
                        this.sendCardPower = res.data.data.send_card_power;
                        this.$apply();
                        this.methods.navigate('add_card_page', this.sendCardPower);
                    } else {
                        console.log(res, '失败');
                    }
                });
            },
            chooseCardAction(){
                this.$broadcast('chooseCard');
            },
            // 去卡片列表 并且 取消红点
            toCardList() {
                let localUrl = this.$parent.globalData.backgroundCheckUrl;
                let session_key = wx.getStorageSync('session_key');
                GET(`${localUrl}/user/changeNotice`, {
                    session_key: session_key
                }, res => {
                    if (res.data.status === 1) {
                        console.log(res, '修改成功');
                    } else {
                        console.log(res, '失败');
                    }
                    this.$apply();
                });
                this.methods.navigate('card_page');
            },
            handleTouchstart(e) {
                this.mouseData.lastX = e.touches[0].pageX;
                this.mouseData.lastY = e.touches[0].pageY;
            },
            handleTouchend(e) {
                // this.currentGesture = 0;
                // this.mouseData.text = '没有滑动';
                var currentX = e.changedTouches[0].pageX;
                var currentY = e.changedTouches[0].pageY;
                var tx = currentX - this.mouseData.lastX;
                var ty = currentY - this.mouseData.lastY;
                var text = "";
                // 左右方向滑动
                if (Math.abs(tx) > Math.abs(ty)) {
                    if (tx < 0) {
                        text = "left";
                        this.sliderCardAddNum();
                    } else if (tx > 0) {
                        this.sliderCardAddNum();
                        text = "right";
                    }
                } else {
                    if (ty < 0) {
                        text = "up";
                    } else if (ty > 0) {
                        text = "down";
                    }
                }
                // 将当前坐标保存进行下次计算
                this.mouseData.lastX = currentX;
                this.mouseData.lastY = currentY;
                // this.mouseData.text = text
                this.sliderCard(text);
            }
        };
        events = {
            cardSelect : (curCardSelect) => {
                let page = 1;
                let curIndex = 0;
                wx.setStorageSync('page', page);
                wx.setStorageSync('curIndex', curIndex);
                this.refresh(page, curIndex, curCardSelect);
                console.log(curCardSelect);
            }
        }
        sliderCardAddNum() {
            let localUrl = this.$parent.globalData.backgroundCheckUrl;
            let session_key = wx.getStorageSync('session_key');
            GET(`${localUrl}/user/sliderCard`, {
                session_key: session_key
            }, res => {
                if (res.data.status === 1) {
                    console.log('success');
                } else {
                    console.log('失败');
                }
            });
        }
        sliderCard(direction) {
            let curCardSelect = wx.getStorageSync('cardSelectStatus');
            switch (direction) {
                case "right":
                    if (this.curIndex <= 0) {
                        // 第一页时，向右滑动，页数无法减少，索引指向最后一条数据
                        if (this.page == 1) {
                            this.curIndex = this.curCard.length - 1;
                            wx.setStorageSync('curIndex', this.curIndex);
                            this.assignmentAction(this.curCard[this.curIndex]);
                            this.$apply();
                        } else {
                            // 否则，读取上一页数据
                            this.page--;
                            wx.setStorageSync('page', this.page);
                            this.$apply();
                            this.refresh(this.page, 0, curCardSelect);
                        }
                    } else {
                        this.curIndex = this.curIndex - 1;
                        wx.setStorageSync('curIndex', this.curIndex);
                        let curObj = this.curCard[this.curIndex];
                        this.assignmentAction(curObj);
                        this.$apply();
                    }
                    break;
                case "left":
                    let len = this.curCard.length;
                    // 当索引大于当前数据的索引长度
                    if (this.curIndex >= len - 1) {
                        // 如果数据长度小于5，说明没有更多数据，page 设置为1
                        if (len < 5) {
                            this.page = 1;
                            this.$apply();
                            wx.setStorageSync('page', this.page);
                            this.refresh(this.page, 0, curCardSelect);
                        } else {
                            // 否则读取下一页数据
                            this.page++;
                            this.$apply();
                            wx.setStorageSync('page', this.page);
                            this.refresh(this.page, 0, curCardSelect);
                        }
                    } else {
                        this.curIndex = this.curIndex + 1;
                        wx.setStorageSync('curIndex', this.curIndex);
                        let curObj = this.curCard[this.curIndex];
                        curObj.isShow = true;
                        this.assignmentAction(curObj);
                        this.$apply();
                    }
                    break;
                default:
                    break;
            }
        }
        // 触发子组件更新卡片数据
        assignmentAction(item) {
            this.$broadcast('switchCard', item);
        }
        noticeStatusAction() {
            let localUrl = this.$parent.globalData.backgroundCheckUrl;
            let session_key = wx.getStorageSync('session_key');
            GET(`${localUrl}/user/user`, {
                session_key: session_key
            }, res => {
                if (res.data.status === 1) {
                    this.noticeStatus = res.data.data.notice;
                    this.$apply();
                } else {
                    console.log(res, '失败');
                }
            });
        }
        refresh(page, curIndex, cardStatus) {
            let localUrl = this.$parent.globalData.backgroundCheckUrl;
            let session_key = wx.getStorageSync('session_key');
            GET(`${localUrl}/card/getList`, {
                page: page,
                cardStatus: cardStatus,
                session_key: session_key
            }, res => {
                console.log(res, 'res')
                if (res.data.status === 1) {
                    let tempObj = Object.assign({}, this.curCard);
                    if(res.data.data.data){
                        this.curCard = res.data.data.data;
                    }else{
                        this.curCard = res.data.data;
                    }
                    
                    if (this.curCard.length === 0) {
                        wepy.showModal({
                            // title: '数据获取失败',
                            content: '没有更多的卡片了',
                            // confirmColor: '#6CACF4',
                            showCancel: false
                        })
                        this.curCard = tempObj;
                        // let curCardSelect = wx.getStorageSync('cardSelectStatus');
                        // this.refresh(1, 0, curCardSelect);
                        // this.isShow = true;
                        
                    } else {
                       
                        this.isShow = true;
                        this.curIndex = curIndex || 0;
                        let curObj = this.curCard[this.curIndex];
                        curObj.isShow = true;
                        this.assignmentAction(curObj);
                        wx.setStorageSync('curIndex', this.curIndex);
                    }
                } else {
                    console.log(res, '失败');
                }
                this.$apply();
            });
        }
        onShow() {
            this.noticeStatusAction();
        }
        onLoad() {
            let cardSelectStatus = wx.getStorageSync('cardSelectStatus') || '0-0';
            if(!cardSelectStatus){
                wx.setStorageSync('cardSelectStatus', '0-0')
            }
            let page = wx.getStorageSync('page') || this.page;
            let curIndex = wx.getStorageSync('curIndex');
            if(page){
                this.refresh(page, curIndex, cardSelectStatus);
            }else{
                this.refresh(1, 0, cardSelectStatus);
            }
        }
    }
</script>

<style lang="scss" scoped>
    .homeContainer {
        height: 100%;
        width: 100%;
    }
    .headContainer {
        height: 180rpx;
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        .logo {
            width: 165rpx;
            height: 86rpx;
            margin-left: 60rpx;
        }
        .cardContainer {
            width: 400rpx;
            height: 100%;
            display: flex;
            .logoCardContainer {
                width: 120rpx;
                height: 100%;
                text-align: center;
                align-items: center;
                display: flex;
                flex-direction: column;
                margin-left: 10rpx;
                position: relative;
                .notice {
                    width: 20rpx;
                    height: 20rpx;
                    background: red;
                    position: absolute;
                    right: 8px;
                    top: 5rpx;
                }
                view {
                    width: 100rpx;
                    height: 100rpx;
                    border-radius: 50%;
                    background: #256af2;
                    margin-top: 28rpx;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    image {
                        width: 42rpx;
                        height: 42rpx;
                    }
                }
                text {
                    color: #849ff5;
                    font-size: 26rpx;
                    margin-top: 12rpx;
                }
            }
        }
    }
</style>
